/********************************************************************************
 * Copyright (c) 2019 University of York and others
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *   Alvaro Miyazawa - initial definition
 ********************************************************************************/

/*
 * generated by Xtext 2.17.1
 */
package circus.robocalc.robochart.textual.formatting2

import circus.robocalc.robochart.Event
import circus.robocalc.robochart.RCPackage
import circus.robocalc.robochart.textual.services.RoboChartGrammarAccess
import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class RoboChartFormatter extends AbstractFormatter2 {
	
	@Inject extension RoboChartGrammarAccess

	def dispatch void format(RCPackage rCPackage, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (_import : rCPackage.imports) {
			_import.format
		}
		for (_interface : rCPackage.interfaces) {
			_interface.format
		}
		for (roboticPlatformDef : rCPackage.robots) {
			roboticPlatformDef.format
		}
		for (typeDecl : rCPackage.types) {
			typeDecl.format
		}
		for (controllerDef : rCPackage.controllers) {
			controllerDef.format
		}
		for (stateMachineDef : rCPackage.machines) {
			stateMachineDef.format
		}
		for (operationDef : rCPackage.operations) {
			operationDef.format
		}
		for (function : rCPackage.functions) {
			function.format
		}
		for (rCModule : rCPackage.modules) {
			rCModule.format
		}
	}

	def dispatch void format(Event event, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		event.type.format
	}
	
	// TODO: implement for RelationType, FunctionType, ProductType, SetType, SeqType, RecordType, Field, Enumeration, Literal, Interface, RoboticPlatformDef, ControllerDef, StateMachineDef, OperationSig, Function, OperationDef, State, Transition, Trigger, EntryAction, DuringAction, ExitAction, VariableList, Variable, Parameter, Forall, Exists, LambdaExp, Iff, Implies, Or, And, Not, BinaryExpression, InExp, DefiniteDescription, Declaration, LetExpression, IfExpression, AsExp, IsExp, Cat, Neg, ArrayExp, CallExp, SeqExp, SetExp, SetRange, SetComp, TupleExp, RangeExp, SeqStatement, TimedStatement, ParStmt, Wait, Call, IfStmt, Assignment, ArrayAssignable, SendEvent, RCModule, Equals, Different, GreaterThan, GreaterOrEqual, LessThan, LessOrEqual, Plus, Minus, Mult, Div, Modulus, Selection, ParExp, VarSelection
}
